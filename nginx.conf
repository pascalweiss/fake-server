worker_processes 1;

events { worker_connections 1024; }

http {
    # Define pretty-printed JSON log format
    log_format json_pretty '{\n'
                           '  "remote_addr": "$remote_addr",\n'
                           '  "remote_user": "$remote_user",\n'
                           '  "time_local": "$time_local",\n'
                           '  "request": "$request",\n'
                           '  "status": "$status",\n'
                           '  "body_bytes_sent": "$body_bytes_sent",\n'
                           '  "http_referer": "$http_referer",\n'
                           '  "http_user_agent": "$http_user_agent",\n'
                           '  "http_x_forwarded_for": "$http_x_forwarded_for",\n'
                           '  "request_body": "$req_body"\n'
                           '}';

    access_log /dev/stdout json_pretty;
    error_log /dev/stderr;

    lua_need_request_body on;

    server {
        listen 80;

        location / {
            default_type text/plain;

            # Capture the request body in a variable
            access_by_lua_block {
                ngx.req.read_body()
                local req_body = ngx.req.get_body_data()
                ngx.var.req_body = req_body and req_body:gsub('"', '\\"') or "(no body)"
            }

            # Return a simple response
            content_by_lua_block {
                ngx.say("Request received and logged")
            }
        }

        # Define a custom variable to hold the request body
        set $req_body "-";
    }
}